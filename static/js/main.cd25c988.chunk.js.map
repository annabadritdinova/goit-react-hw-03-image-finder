{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","services/imagesServices.js","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","BASE_URL","API_KEY","a","imageName","currentPage","searchQuery","fetch","response","json","data","hits","api","fetchImagesAPI","Searchbar","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ImageGalleryItemImage","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","Button","fetchImages","Spinner","Spiner","color","height","width","timeout","App","isLoading","error","onChangeQuery","options","imagesServices","then","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","shouldRenderLoadMoreButton","length","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd25c988.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\",\"ImageGalleryItemImage\":\"Modal_ImageGalleryItemImage__17isc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Loader_Spiner__1ZwwU\"};","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '20339411-4fff238fb2bd74b59a4d62dbe';\n\nasync function fetchImagesAPI({ imageName, currentPage }) {\n  const searchQuery = `?q=${imageName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  try {\n    const response = await fetch(`${BASE_URL}/${searchQuery}`);\n    const data = await response.json();\n    return data.hits;\n  } catch (error) {\n    return error('error in fetch');\n  }\n}\n\nconst api = {\n  fetchImagesAPI,\n};\n\nexport default api;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = { imageName: '' };\n\n  handleChange = e => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast('enter search query');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            value={this.state.imageName}\n            onChange={this.handleChange}\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>\n          <img src={src} alt={alt} className={styles.ImageGalleryItemImage} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\nimport Modal from '../Modal';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className={styles.ImageGalleryItem}>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className={styles.ImageGalleryItemImage}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className={styles.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          largeImageUrl={image.largeImageURL}\n          alt={image.tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nclass Button extends Component {\n  static propTypes = { fetchImages: PropTypes.func.isRequired };\n\n  render() {\n    return (\n      <button onClick={this.props.fetchImages} className={styles.Button}>\n        Load more\n      </button>\n    );\n  }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className={styles.Spiner}\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} \n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport imagesServices from './services/imagesServices';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    currentPage: 1,\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imageName !== this.state.imageName) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = imageName => {\n    this.setState({\n      imageName,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { imageName, currentPage } = this.state;\n    const options = { imageName, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesServices\n      .fetchImagesAPI(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, isLoading, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {error && <p>something went wrong: {error.message}</p>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={this.state.images} />\n\n        {isLoading && <Loader />}\n\n        {shouldRenderLoadMoreButton && (\n          <Button fetchImages={this.fetchImages} />\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};"],"sourceRoot":""}